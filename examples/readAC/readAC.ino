//                               // Измерение переменного тока:
#include <iarduino_ACS712.h>     // Подключаем библиотеку для работы с Trema датчиками тока.
iarduino_ACS712 sensor(A0);      // Объявляем объект sensor для работы с Trema датчиком тока,
                                 // указывая что он подключён к выводу A0.
void setup(){                    //
    Serial.begin(9600);          // Инициируем передачу данных в монитор на скорости 9600 бод.
    float v=sensor.getZeroVAC(); // Считываем усреднённое напряжение с выхода модуля при отсутствии измеряемого тока (I = 0 A)
    sensor.setZeroVAC(v);        // Указываем чему равно напряжение на выходе модуля при отсутствии измеряемого тока (I = 0 A)
                                 // В данном случае, при старте скетча, измеряемая цепь должна быть обесточена!
                                 // Но можно сделать по другому:
                                 // Однократно считать напряжение функцией getZeroVAC(), при отсутствии измеряемого тока и запомнить его.
                                 // После чего исключить функцию getZeroVAC() из скетча.
//  sensor.setZeroVAC(0.25);     // А в качестве аргумента функции setZeroVAC() указать запомненное ранее значение, например, 0.25 В.
                                 // Тогда, при старте, обесточивать измеряемую цепь не требуется.
//  sensor.calibrationAC(511);   // Если показания тока не соответствуют действительности, то ...
                                 // их можно линейно уменьшить или увеличить, вызвав функцию calibrationAC() с параметром.
}                                // Параметр функции calibrationAC() - целое число от 0 до 1023 (по умолчанию 511).
                                 // Чем выше значение параметра, тем выше показания тока и наоборот.
void loop(){                     //
    float i = sensor.readAC();   // Считываем силу переменного тока в переменную i. Можно считывать силу тока от 0 до +5 A.
                                 // Функция readAC() автоматически сглаживает показания силы тока (чем чаще она вызывается, тем сильнее сглаживание).
                                 // Но данную функцию можно вызвать с параметром в виде целого числа от 1 до 100, указав требуемое Вам сглаживание.
                                 // Чем выше значение параметра, тем сильнее сглаживание показаний (тем плавнее будут изменяться считанные значения).
    Serial.print(i);             // Выводим считанную силу тока в монитор последовательного порта.
    Serial.println(" A.");       // Добавляем единицу измерений после выведенного значения.
    delay(500);                  // Устанавливаем задержку в 500 мс (не обязательно).
}                                //
                                 // В этом скетче описаны все функции для работы с переменным током: getZeroVAC(), setZeroVAC(), calibrationAC(), readAC().
                                 // Для работы с постоянным током используются похожие функции:      getZeroVDC(), setZeroVDC(), calibrationDC(), readDC().
